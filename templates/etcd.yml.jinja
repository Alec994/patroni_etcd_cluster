{%- if global.enable_ssl   -%}
{%-   set proto = 'https'  -%}
{%- else  -%}
{%-   set proto = 'http'   -%}
{%- endif -%}
name: {{ ansible_hostname }}
data-dir: /var/lib/etcd/{{ ansible_hostname }}
listen-peer-urls: {{ proto }}://{{ ansible_host }}:{{ peer_urls_port }}
listen-client-urls: {{ proto }}://{{ ansible_host }}:{{ client_urls_port }},{{ proto }}://127.0.0.1:{{ client_urls_port }}
initial-advertise-peer-urls: {{ proto }}://{{ ansible_host }}:{{ peer_urls_port }}
advertise-client-urls: {{ proto }}://{{ ansible_hostname }}:{{ client_urls_port }}
initial-cluster: {% for host in groups['etcd'] -%} {{ host }}={{ proto }}://{{ hostvars[host]['ansible_host'] }}:{{ peer_urls_port }}{% if not loop.last %},{% endif %}{%- endfor %}

initial-cluster-state: new
initial-cluster-token: P@ssw0rdTOKENWOULDBEP@ssw0rd
enable-v2: true

{% if global.enable_ssl -%}
client-transport-security:
  cert-file: /etc/etcd/ssl/{{ ansible_hostname }}.crt
  key-file: /etc/etcd/ssl/{{ ansible_hostname }}.pem
  trusted-ca-file: /etc/etcd/ssl/{{ ssl_ca_base_filename }}.crt

peer-transport-security:
  cert-file: /etc/etcd/ssl/{{ ansible_hostname }}.crt
  key-file: /etc/etcd/ssl/{{ ansible_hostname }}.pem
  trusted-ca-file: /etc/etcd/ssl/{{ ssl_ca_base_filename }}.crt
{%- endif %}
